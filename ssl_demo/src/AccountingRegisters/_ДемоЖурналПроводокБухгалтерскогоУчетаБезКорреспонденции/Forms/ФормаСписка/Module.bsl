///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Элементы.ОтборРегистратор.ОграничениеТипа = Метаданные.РегистрыБухгалтерии._ДемоЖурналПроводокБухгалтерскогоУчета.СтандартныеРеквизиты.Регистратор.Тип;

	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	УстановитьОтборы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОтборСчетПриИзменении(Элемент)

	УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, "Счет", ОтборСчет, ВидСравненияКомпоновкиДанных.ВИерархии);

КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)

	УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, "Организация", ОтборОрганизация);

КонецПроцедуры

&НаКлиенте
Процедура ОтборРегистраторПриИзменении(Элемент)

	УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор, "Регистратор", ОтборРегистратор);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереключитьАктивностьПроводок(Команда)

	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Или Не ЗначениеЗаполнено(ТекущиеДанные.Регистратор) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран документ'"));
		Возврат;
	КонецЕсли;

	ПереключитьАктивностьПроводокСервер(ТекущиеДанные.Регистратор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереключитьАктивностьПроводокСервер(Документ)

	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(
			"РегистрБухгалтерии._ДемоЖурналПроводокБухгалтерскогоУчета.НаборЗаписей");
		ЭлементБлокировкиДанных.УстановитьЗначение("Регистратор", Документ);
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(Документ.Метаданные().ПолноеИмя());
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", Документ);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Разделяемый;
		БлокировкаДанных.Заблокировать();

		ПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "ПометкаУдаления");

		Если ПометкаУдаления <> Неопределено И Не ПометкаУдаления Тогда

			Движения = РегистрыБухгалтерии._ДемоЖурналПроводокБухгалтерскогоУчета.СоздатьНаборЗаписей();
			Движения.Отбор.Регистратор.Установить(Документ);
			Движения.Прочитать();

			Если Движения.Количество() > 0 Тогда
				Движения.УстановитьАктивность(Не Движения[0].Активность);
				Движения.Записать();
			КонецЕсли;

		КонецЕсли;

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЭлементОтбора(Знач Отбор, Знач ИмяПоля, Знач ПравоеЗначение,
	Знач ВидСравнения = Неопределено)

	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Отбор, ИмяПоля, ПравоеЗначение,
		ВидСравнения,, ЗначениеЗаполнено(ПравоеЗначение), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);

КонецПроцедуры

&НаКлиенте
Функция ЗначениеОтбора(ЭлементыОтбора, ИмяПоля)

	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля) Тогда
			Возврат ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборы()
	
	ОтборСчет = ЗначениеОтбора(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, "Счет");
	ОтборОрганизация = ЗначениеОтбора(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, "Организация");
	ОтборРегистратор = ЗначениеОтбора(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, "Регистратор");
	
КонецПроцедуры

#КонецОбласти